<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="DynamicBlockImageIsRightAlignedTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Dynamic Block"/>
            <title value="Image Can Be Right Aligned In Dynamic Block"/>
            <description value="A user can right align an image in a Dynamic Block"/>
            <severity value="CRITICAL"/>
            <useCaseId value="MC-4293"/>
            <testCaseId value="MC-5158"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-ee"/>
            <group value="pagebuilder-dynamic-block"/>
            <group value="pagebuilder-dynamic-block-content"/>
            <group value="pagebuilder-image"/>
        </annotations>
        <before>
            <createData entity="_defaultDynamicBlock" stepKey="createDynamicBlock"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedDynamicBlockActionGroup" stepKey="navigateToCreatedDynamicBlock">
                <argument name="Banner" value="$$createDynamicBlock$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage"/>
            <actionGroup ref="DeleteBannerActionGroup" stepKey="deleteDynamicBlock">
                <argument name="bannerName" value="$$createDynamicBlock.name$$"/>
            </actionGroup>
            <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
            <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="NavigateToFolder">
                <argument name="FolderName" value="{{PageBuilderImageProperty_PNG.path}}"/>
            </actionGroup>
            <actionGroup ref="DeleteImageFromStorageActionGroup" stepKey="DeleteImageFromStorage">
                <argument name="Image" value="PageBuilderImageProperty_PNG"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Go to edit page of Dynamic Block and configure Image -->
        <comment userInput="Go to edit page of Dynamic Block and configure image" stepKey="commentGoToDynamicBlockEditPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragImageIntoStage">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderImageContentType"/>
        </actionGroup>
        <actionGroup ref="attachFileSlideOutPropertyGeneral" stepKey="attachImageFile">
            <argument name="property" value="PageBuilderImageProperty_PNG"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterImageCaptionProperty">
            <argument name="property" value="PageBuilderImageCaptionProperty"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterAlignment">
            <argument name="property" value="PageBuilderAdvancedAlignmentPropertyRight"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveRowEditPanelSettings"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueDynamicBlockActionGroup" stepKey="clickDynamicBlockSaveButton"/>
        <!-- Go to CMS Page and choose Dynamic Block -->
        <comment userInput="Go to CMS Page and choose Dynamic Block" stepKey="commentGoToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandMenuSectionAddContent">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragDynamicBlockIntoStage">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStageAfterDrop">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchAndSelectDynamicBlockInGrid" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createDynamicBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Verify Right Alignment On Stage - Before Save -->
        <comment userInput="Verify right alignment on stage before save" stepKey="commentVerifyRightAlignmentOnStageBeforeSave"/>
        <seeElement selector="({{ImageOnStorefront.alignment('1', PageBuilderAdvancedAlignmentPropertyRight.value)}}{{DynamicBlockOnStorefront.ancestor}})[1]" stepKey="seeImageAlignmentRightBeforeSave"/>
        <actionGroup ref="verifyAlignmentRightInBlock" stepKey="verifyAlignmentRightInBlockBeforeSave">
            <argument name="block" value="DynamicBlockOnStorefront"/>
            <argument name="container" value="{{RowOnStorefront.innerCSS}}"/>
            <argument name="content" value="{{ImageOnStorefront.imageElementCSS}}"/>
            <argument name="containerPadding" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen1"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStageAfterSave"/>
        <!-- Verify Right Alignment On Stage - After Save -->
        <comment userInput="Verify right alignment on stage after save" stepKey="commentVerifyRightAlignmentOnStageAfterSave"/>
        <seeElement selector="({{ImageOnStorefront.alignment('1', PageBuilderAdvancedAlignmentPropertyRight.value)}}{{DynamicBlockOnStorefront.ancestor}})[1]" stepKey="seeImageAlignmentRightAfterSave"/>
        <actionGroup ref="verifyAlignmentRightInBlock" stepKey="verifyAlignmentRightInBlockAfterSave">
            <argument name="block" value="DynamicBlockOnStorefront"/>
            <argument name="container" value="{{RowOnStorefront.innerCSS}}"/>
            <argument name="content" value="{{ImageOnStorefront.imageElementCSS}}"/>
            <argument name="containerPadding" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <!-- Verify Right Alignment In Storefront -->
        <comment userInput="Verify right alignment in storefront" stepKey="commentVerifyRightAlignmentInStorefront"/>
        <seeElement selector="({{ImageOnStorefront.alignment('1', PageBuilderAdvancedAlignmentPropertyRight.value)}}{{DynamicBlockOnStorefront.ancestor}})[1]" stepKey="seeImageAlignmentRightStorefront"/>
        <actionGroup ref="verifyAlignmentRightInBlock" stepKey="verifyAlignmentRightInBlockStorefront">
            <argument name="block" value="DynamicBlockOnStorefront"/>
            <argument name="container" value="{{RowOnStorefront.innerCSS}}"/>
            <argument name="content" value="{{ImageOnStorefront.imageElementCSS}}"/>
            <argument name="containerPadding" value="PageBuilderPaddingProperty10"/>
        </actionGroup>
    </test>
</tests>
