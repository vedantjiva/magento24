<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="DeleteConfigurableProductFromCartBySkuFromCustomerAccountTest">
        <annotations>
            <features value="AdvancedCheckout"/>
            <stories value="Delete Products from Requiring Attention Grid"/>
            <title value="Delete configurable product from cart by sku from customer account test"/>
            <description value="Delete configurable product from cart by sku from customer account"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14021"/>
            <group value="AdvancedCheckout"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!-- Create customer -->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <!-- Create category -->
            <createData entity="ApiCategory" stepKey="createCategory"/>

            <!-- Create configurable product -->
            <createData entity="ApiConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct"/>
            </createData>
        </before>
        <after>
            <!-- Logout customer -->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer"/>

            <!-- Delete customer -->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>

            <!-- Delete configurable product data -->
            <deleteData createDataKey="createConfigChildProduct" stepKey="deleteConfigChildProduct"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteConfigProductAttribute"/>

            <!-- Delete category -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
           <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Login to frontend -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefrontAccount">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>

        <!-- Open My Account > Order by SKU -->
        <amOnPage stepKey="goToMyAccountPage" url="{{StorefrontCustomerDashboardPage.url}}"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <actionGroup ref="StorefrontCustomerGoToSidebarMenu" stepKey="goToSidebarMenu">
            <argument name="menu" value="Order by SKU"/>
        </actionGroup>

        <!-- Fill first product data -->
        <actionGroup ref="FillProductSkuAndQtyActionGroup" stepKey="fillProductQtyAndSkuForProduct">
            <argument name="sku" value="$$createConfigProduct.sku$$"/>
            <argument name="quantity" value="{{ApiSimpleSingleQty.quantity}}"/>
            <argument name="index" value="0"/>
        </actionGroup>

        <!-- Add product to cart -->
        <click selector="{{StorefrontCustomerOrderBySkuSection.addToCart}}" stepKey="clickAddToCart"/>
        <waitForPageLoad stepKey="waitForAddingProductToCart"/>

        <!-- Click remove button for first product and assert success message -->
        <click selector="{{CheckoutCartProductSection.removeProductBySku($$createConfigProduct.sku$$)}}" stepKey="removeProduct"/>
        <see selector="{{StorefrontMessagesSection.success}}" userInput="You removed the item." stepKey="seeSuccessMessage"/>

        <!-- Assert products absent in requiring attention -->
        <dontSeeElement selector="{{CheckoutCartProductSection.failedItemBySku($$createConfigProduct.sku$$)}}" stepKey="dontSeeProduct"/>

        <!-- Assert products absent in shopping cart -->
        <amOnPage url="{{CheckoutCartPage.url}}" stepKey="goToCartPage"/>
        <waitForPageLoad stepKey="waitForCartPageLoad"/>
        <see selector="{{CheckoutCartProductSection.emptyCart}}" userInput="You have no items in your shopping cart." stepKey="seeNoItemsInShoppingCart"/>
    </test>
</tests>
