<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AddBundleDynamicProductToCartOrderBySkuWidgetTest">
        <annotations>
            <title value="Check that shopping Cart is empty when Bundle dynamic product added by SKU from Widget to an Order"/>
            <description value="Check that shopping Cart is empty when Bundle dynamic product added by SKU from Widget to an Order"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14053"/>
            <group value="AdvancedCheckout"/>
            <stories value="Add products to cart by sku from widget"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <!--Register Customer.-->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <!--Create Simple Product for Bundle Dynamic Product -->
            <createData entity="SimpleSubCategory" stepKey="createSubCategory"/>

            <createData entity="SimpleProduct2" stepKey="simpleProduct1">
                <field key="price">4.99</field>
            </createData>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2">
                <field key="price">2.89</field>
            </createData>

            <!--Add special price to simple product-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct1.id$$)}}" stepKey="openAdminEditPage"/>
            <actionGroup ref="AddSpecialPriceToProductActionGroup" stepKey="addSpecialPrice"/>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProductForm"/>

            <!--Create Bundle product-->
            <createData entity="ApiBundleProductPriceViewRange" stepKey="createBundleProduct">
                <requiredEntity createDataKey="createSubCategory"/>
            </createData>
            <createData entity="MultipleSelectOption" stepKey="createBundleOption1_1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="required">false</field>
            </createData>
            <createData entity="CheckboxOption" stepKey="createBundleOption1_2">
                <requiredEntity createDataKey="createBundleProduct"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct2">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_2"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </createData>

            <!-- Flush cache -->
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>

            <!--Create widget "Order by Sku" -->
            <actionGroup ref="AdminCreateAndSaveWidgetActionGroup" stepKey="createWidget">
                <argument name="widget" value="DefaultOrderBySKUWidget" />
            </actionGroup>

            <!-- Reindex invalidated indices after product attribute has been created/deleted -->
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </before>
        <after>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createSubCategory" stepKey="deleteSubCategory1"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createBundleProduct" stepKey="deleteBundleProduct"/>
            <actionGroup ref="AdminDeleteWidgetActionGroup" stepKey="deleteWidget">
                <argument name="widget" value="DefaultOrderBySKUWidget"/>
            </actionGroup>

            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>

        <!--Login to Frontend-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="customerLogin">
            <argument name="Customer" value="$$createCustomer$$" />
        </actionGroup>

        <!--Navigate to My Account-->
        <amOnPage url="{{StorefrontCustomerDashboardPage.url}}" stepKey="openCustomersAccount"/>
        <waitForPageLoad time="10" stepKey="waitForWidgetLoad"/>
        <scrollTo selector="{{StorefrontWidgetOrderBySKUSection.sku('0')}}" stepKey="scrollToWidget"/>

        <!--Fill data in widget according to dataset-->
        <actionGroup ref="StorefrontFillOrderBySkuWidgetActionGroup" stepKey="fillSimpleProductBySkuOnWidget">
            <argument name="product" value="$$createBundleProduct$$" />
            <argument name="cartItem" value="SimpleTwoCartItems" />
            <argument name="rowNumber" value="0" />
        </actionGroup>

        <!--Click Add to Cart button-->
        <actionGroup ref="StorefrontAddToCartOrderBySkuWidgetActionGroup" stepKey="addToCart"/>

        <!--Perform all asserts-->
        <waitForPageLoad time="20" stepKey="waitForProductLoad"/>
        <see selector="{{CheckoutCartMessageSection.errorMessage}}" userInput="1 product requires your attention." stepKey="seeErrorMessage"/>
        <see selector="{{CheckoutCartProductSection.productName}}" userInput="$$createBundleProduct.name$$" stepKey="seeProductName"/>
        <see selector="{{CheckoutCartProductSection.messageErrorNeedChooseOptions}}" userInput="You need to choose options for your item." stepKey="seeNeedChooseOptions"/>
        <seeLink userInput="Specify the product's options." stepKey="seeText"/>
        <actionGroup ref="StorefrontCheckThatCartIsEmptyActionGroup" stepKey="checkThatCartIsEmpty"/>
    </test>
</tests>
