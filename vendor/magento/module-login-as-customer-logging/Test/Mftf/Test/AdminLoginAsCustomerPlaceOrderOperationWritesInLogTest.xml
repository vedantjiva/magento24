<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminLoginAsCustomerPlaceOrderOperationWritesInLogTest">
        <annotations>
            <features value="Login as Customer"/>
            <stories value="Place Oder operation is written in log"/>
            <title value="Verify that 'Place Oder' operation is written in log"/>
            <description value="'Place Oder' operation in session is written in log"/>
            <severity value="CRITICAL"/>
            <group value="login_as_customer"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{LoginAsCustomerConfigDataEnabled.path}} 1" stepKey="enableLoginAsCustomer"/>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushConfigCache">
                <argument name="tags" value="config"/>
            </actionGroup>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="SimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="Simple_US_Customer_Assistance_Allowed" stepKey="createCustomer"/>

            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>

            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <magentoCLI command="config:set {{LoginAsCustomerConfigDataEnabled.path}} 0" stepKey="disableLoginAsCustomer"/>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushConfigCache">
                <argument name="tags" value="config"/>
            </actionGroup>
        </after>

        <!-- Admin Login as Customer -->
        <actionGroup ref="AdminLoginAsCustomerLoginFromCustomerPageActionGroup" stepKey="loginAsCustomerFromCustomerPage">
            <argument name="customerId" value="$$createCustomer.id$$"/>
        </actionGroup>

        <!-- Place order -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage">
            <argument name="productUrl" value="$$createProduct.sku$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontAddProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="$$createProduct$$"/>
            <argument name="productCount" value="1"/>
        </actionGroup>
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="openCart"/>
        <actionGroup ref="PlaceOrderWithLoggedUserActionGroup" stepKey="placeOrder"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="grabOrderId"/>
        <closeTab stepKey="closeLoginAsCustomerTab"/>

        <!-- Go to Reports log and sort by asc -->
        <actionGroup ref="AdminOpenActionLogsReportPageActionGroup" stepKey="openActionLogsReportPage"/>
        <actionGroup ref="AdminLogsReportSelectSortByAscActionGroup" stepKey="sortByAsc"/>
        <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearGridFilters"/>

        <!-- Assert report log row -->
        <actionGroup ref="AdminAssertReportLogInGridActionGroup" stepKey="assertRow">
            <argument name="actionGroup" value="Login as Customer"/>
            <argument name="action" value="Place Order"/>
            <argument name="fullActionName" value="__"/>
            <argument name="details" value="Order {$grabOrderId} has been placed with products: sku = $$createProduct.sku$$, customer id = $$createCustomer.id$$, email = $$createCustomer.email$$"/>
        </actionGroup>

        <!-- Click view details link and verify admin user link -->
        <click selector="{{AdminActionLogReportGridSection.viewLink}}" stepKey="clickViewDetailsLink"/>
        <actionGroup ref="AdminAssertReportLogEntryAdminLinkActionGroup" stepKey="verifyAdminUserLink"/>
    </test>
</tests>
