<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCustomerCheckoutWithTwoAddressesAndEnabledAddressSearchTest">
        <annotations>
            <features value="Checkout with search address enabled"/>
            <stories value="MC-5681: Implement handling of large number of addresses on Onepage Checkout"/>
            <title value="One Page Checkout with Customer Addresses Search - Search on shipping step"/>
            <description value="One Page Checkout with Customer Addresses Search - Search on shipping step"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-15546"/>
            <group value="checkout"/>
        </annotations>
        <before>
            <createData entity="SimpleSubCategory" stepKey="simpleCategory"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="simpleCategory"/>
            </createData>
            <createData entity="Simple_US_Customer_Two_Addresses" stepKey="simpleUsCustomer"/>
            <magentoCLI command="config:set {{EnableCustomerAddressSearch.path}} {{EnableCustomerAddressSearch.value}}" stepKey="enableCustomerAddressSearch"/>
            <magentoCLI command="config:set {{AddressSearchLimitTwo.path}} {{AddressSearchLimitTwo.value}}" stepKey="setAddressSearchLimitTwo"/>
        </before>
        <after>
            <!--Clear filters-->
            <amOnPage url="{{AdminCustomerPage.url}}" stepKey="navigateToCustomers"/>
            <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearExistingCustomerFilters"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="simpleCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="simpleUsCustomer" stepKey="deleteCustomer"/>
            <magentoCLI command="config:set {{DisableCustomerAddressSearch.path}} {{DisableCustomerAddressSearch.value}}" stepKey="disableCustomerAddressSearch"/>
            <magentoCLI command="config:set {{DefaultAddressSearchLimit.path}} {{DefaultAddressSearchLimit.value}}" stepKey="setAddressSearchLimitTen"/>
        </after>
        <!--Login to storefront-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="customerLogin">
            <argument name="Customer" value="$$simpleUsCustomer$$" />
        </actionGroup>
        <!--Add Simple Product to Shopping Cart and Proceed to checkout-->
        <amOnPage url="{{StorefrontProductPage.url($$simpleProduct.name$$)}}" stepKey="amOnSimpleProductPage"/>
        <actionGroup ref="StorefrontAddProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="$$simpleProduct$$"/>
            <argument name="productCount" value="1"/>
        </actionGroup>
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart" />
        <!--Verify default address data-->
        <actionGroup ref="CheckSelectedShippingAddressInCheckoutWithSearchActionGroup" stepKey="checkDefaultShippingAddressSelected">
            <argument name="customerVar" value="$$simpleUsCustomer$$" />
            <argument name="customerAddressVar" value="US_Address_TX" />
        </actionGroup>
        <!--Click "Change Address" Link-->
        <click stepKey="ClickChangeAddressButton" selector="{{CheckoutShippingAddressSection.changeAddressButton}}"/>
        <!--Counter under *Search* field shows *2 addresses*-->
        <see stepKey="VerifyFoundAddressesQty"  selector="{{CheckoutShippingAddressSearchSection.addressesFound}}" userInput="2 addresses"/>
        <!--Addresses grid contains:-->
        <!--* Address *A* with labels *DEFAULT* and *Selected*-->
        <seeElement stepKey="VerifyDefaultAddressSelected" selector="{{CheckoutShippingAddressSearchSection.defaultAddressButton(US_Address_TX.postcode)}}"/>
        <seeElement stepKey="VerifyDefaultAddressSelectedLabel" selector="{{CheckoutShippingAddressSearchSection.selectedAddressButton(US_Address_TX.postcode)}}"/>
        <!--* Address *B* with button *Ship Here*-->
        <seeElement stepKey="VerifyShipHereButtonForSecondAddress" selector="{{CheckoutShippingAddressSearchSection.shipHereButton(US_Address_NY_Not_Default_Address.postcode)}}"/>
        <!--Type second address ZIP in Search field and press Enter-->
        <fillField stepKey="FillSearchFieldWithSecondAddressZip" selector="{{CheckoutShippingAddressSearchSection.searchAddressField}}" userInput="{{US_Address_NY_Not_Default_Address.postcode}}"/>
        <click stepKey="ClickSearchAddressButton" selector="{{CheckoutShippingAddressSearchSection.searchAddressButton}}"/>
        <!--Counter under *Search* field shows *1 addresses*-->
        <see stepKey="VerifyFoundAddressesQtyAfterSearch"  selector="{{CheckoutShippingAddressSearchSection.addressesFound}}" userInput="1 addresses"/>
        <!--The only *B* address is displayed in the grid-->
        <dontSee stepKey="AssertOnlyOneAddressDisplayed" selector="{{CheckoutShippingAddressSearchSection.exactShippingAddressItem('2')}}"/>
        <!--Click *Ship Here* button-->
        <click stepKey="ClickShipHereForFoundAddress" selector="{{CheckoutShippingAddressSearchSection.shipHereButton(US_Address_NY_Not_Default_Address.postcode)}}"/>
        <!--*Select Shipping Address* popup is closed-->
        <dontSee stepKey="VerifySelectShippingAddressClosed" selector="{{CheckoutShippingAddressSearchSection.searchAddressField}}"/>
        <!--Shipping Address block is updated to *B* address-->
        <actionGroup ref="CheckSelectedShippingAddressInCheckoutWithSearchActionGroup" stepKey="checkSecondShippingAddressSelected">
            <argument name="customerVar" value="$$simpleUsCustomer$$" />
            <argument name="customerAddressVar" value="US_Address_NY_Not_Default_Address" />
        </actionGroup>
        <!--Select first shipping method-->
        <click stepKey="SelectFirstShippingMethod" selector="{{CheckoutShippingMethodsSection.firstShippingMethod}}"/>
        <waitForElement stepKey="WaitForNextButtonVisible" selector="{{CheckoutShippingMethodsSection.next}}" time="30"/>
        <click stepKey="ProceedToBillingStep" selector="{{CheckoutShippingMethodsSection.next}}" />
        <!--Review & Payments step of checkout is opened-->
        <!--Select Check / Money order Payment method-->
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyPayment"/>
        <!--Address *B* is displayed as billing address for selected payment method-->
        <actionGroup ref="CheckBillingAddressInCheckoutActionGroup" stepKey="checkFirstBillingAddressOnBillingPage">
            <argument name="customerVar" value="$$simpleUsCustomer$$" />
            <argument name="customerAddressVar" value="US_Address_TX" />
        </actionGroup>
        <!--Click "My billing and shipping address are the same" checkbox-->
        <click stepKey="ClickBillingAndShippingAddressAreTheSameButton" selector="{{CheckoutBillingAddressSection.billingAndShippingAddressAreTheSameOnPaymentMethod('checkmo')}}"/>
        <!--Check that billing address has changed to Address *A*-->
        <actionGroup ref="CheckShipToInformationInCheckoutActionGroup" stepKey="US_Address_NY_Not_Default_Address">
            <argument name="customerVar" value="$$simpleUsCustomer$$" />
            <argument name="customerAddressVar" value="US_Address_NY_Not_Default_Address" />
        </actionGroup>
        <!-- Place order -->
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="PlaceOrder" />
    </test>
</tests>
