<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ApplyRewardPointsOnCheckoutThatCoveredAllAmountTest">
        <annotations>
            <features value="Reward"/>
            <stories value="Customer Creation, Virtual Product Creation"/>
            <title value="Apply Reward Points during Checkout that covered all amount."/>
            <description value="Apply Reward Points during Checkout that covered all amount."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-42691"/>
            <group value="reward"/>
        </annotations>
        <before>
            <!-- Creating Virtual Product-->
            <createData entity="SimpleTwo" stepKey="createSimpleProduct">
                <field key="price">10.00</field>
            </createData>

            <magentoCLI stepKey="runCronIndex" command="cron:run --group=index"/>

            <!-- Creating Customer with default shipping/billing addresses -->
            <createData entity="Simple_US_Customer" stepKey="createPreReqCustomer">
                <field key="group_id">1</field>
            </createData>

            <!--Adding reward points to previously created Customer -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin1"/>
            <actionGroup ref="AdminApplyRewardPointsActionGroup" stepKey="applyRewardPointsToCustomer">
                <argument name="customerId" value="$$createPreReqCustomer.id$$"/>
                <argument name="rewards" value="25"/>
            </actionGroup>

            <!--Creating exchange rate - Points to Currency -->
            <actionGroup ref="AdminCreatePointsToCurrencyRateActionGroup" stepKey="createPointsToCurrencyRateActionGroup">
                <argument name="rate1" value="1"/>
                <argument name="rate2" value="1"/>
            </actionGroup>

            <!--Creating exchange rate - Currency to Points -->
            <actionGroup ref="AdminCreateCurrencyToPointsRateActionGroup" stepKey="createCurrencyToPointsRateActionGroup">
                <argument name="rate1" value="1"/>
                <argument name="rate2" value="1"/>
            </actionGroup>
        </before>

        <after>
            <!-- Deleting previously created Category, Product, Customer -->
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createPreReqCustomer" stepKey="deletePreReqCustomer"/>
            <actionGroup ref="AdminDeleteRewardExchangeRateActionGroup" stepKey="deleteRewardExchangeRate1"/>
            <actionGroup ref="AdminDeleteRewardExchangeRateActionGroup" stepKey="deleteRewardExchangeRate2"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>

        <!--Login to storefront as previously created customer-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$$createPreReqCustomer$$"/>
        </actionGroup>

        <!--Open the Product Page and Add the product to Cart-->
        <amOnPage url="{{StorefrontProductPage.url($$createSimpleProduct.custom_attributes[url_key]$$)}}" stepKey="navigateToSimpleProductPageTest3"/>
        <waitForPageLoad stepKey="waitForSimpleProductPageLoad"/>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addToCartFromStorefrontProductPage">
            <argument name="productName" value="$$createSimpleProduct.name$$"/>
        </actionGroup>

        <!--Go to Checkout-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart2"/>
        <see userInput="$5.00 Fixed Flat Rate" selector="{{CheckoutShippingMethodsSection.shippingMethodRowByName('Flat Rate')}}" stepKey="seeShippingMethod"/>
        <click selector="{{CheckoutShippingMethodsSection.checkShippingMethodByName('Flat Rate')}}" stepKey="selectFlatShippingMethod"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask2"/>
        <waitForElement selector="{{CheckoutShippingMethodsSection.next}}" time="30" stepKey="waitForNextButton"/>
        <click selector="{{CheckoutShippingMethodsSection.next}}" stepKey="clickNext"/>
        <waitForElement selector="{{CheckoutPaymentSection.paymentSectionTitle}}" time="30" stepKey="waitForPaymentSectionLoadedTest2"/>

        <actionGroup ref="StorefrontCheckoutUsingRewardPointsActionGroup" stepKey="checkoutUseRewardPoints">
            <argument name="rewards" value="25"/>
            <argument name="rewardsUsing" value="15"/>
        </actionGroup>

        <see userInput="No Payment Information Required" selector="{{CheckoutPaymentSection.paymentMethodTitle}}" stepKey="seePaymentMethod"/>

        <!--Click Place Order button-->
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskAfterUsingPoints"/>
        <click selector="{{CheckoutPaymentSection.placeOrder}}" stepKey="clickPlaceOrder"/>
        <waitForElement selector="{{CheckoutSuccessMainSection.success}}" time="30" stepKey="waitForLoadSuccessPage"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderLink}}" stepKey="grabOrderNumber"/>

        <!--Check order rewardPoint information from StoreFront-->
        <click selector="{{CheckoutSuccessMainSection.orderLink}}" stepKey="clickOrderLink"/>
        <waitForElement selector="{{StorefrontCustomerOrderViewSection.orderTitle}}" time="30" stepKey="waitForLoadStoreFrontOrderPage"/>
        <see selector="{{StorefrontCustomerOrderViewSection.rewardPoints}}" userInput="15 Reward points -$15.00" stepKey="seeRewardPoint"/>

        <!--Check order rewardPoint information from Admin-->
        <actionGroup ref="CheckOrderRewardPointFromAdminActionGroup" stepKey="checkOrderRewardPointFromAdmin">
            <argument name="rewardPointUsed" value="15"/>
            <argument name="orderNumber" value="$grabOrderNumber"/>
        </actionGroup>

        <!--Verify Customer Reward Points Balance-->
        <actionGroup ref="AdminVerifyCustomerRewardPointsAmountActionGroup" stepKey="verifyCustomerRewardPointsAmountActionGroup">
            <argument name="customerId" value="$$createPreReqCustomer.id$$"/>
            <argument name="rewards" value="10"/>
        </actionGroup>
    </test>
</tests>
