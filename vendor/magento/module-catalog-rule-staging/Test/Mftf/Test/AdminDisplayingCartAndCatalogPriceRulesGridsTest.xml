<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminDisplayingCartAndCatalogPriceRulesGridsTest">
        <annotations>
            <features value="CatalogRule"/>
            <stories value="Cart and Catalog Price Rules grids"/>
            <title value="Displaying Cart/Catalog Price Rules grids"/>
            <description value="Displaying Cart/Catalog Price Rules grids"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-17843"/>
            <useCaseId value="MC-17493"/>
            <group value="catalogRule"/>
        </annotations>
        <before>
            <!-- Login as Admin -->
            <comment userInput="Login as Admin" stepKey="commentLoginAsAdmin"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>

            <actionGroup ref="AdminCartPriceRuleDeleteAllActionGroup" stepKey="deleteCartPriceRule"/>

            <!--Create two Websites -->
            <!--Create first Website -->
            <comment userInput="Create two Websites " stepKey="commentCreateWebsites"/>
            <actionGroup ref="AdminCreateWebsiteActionGroup" stepKey="createFirstWebsite">
                <argument name="newWebsiteName" value="{{customWebsite.name}}"/>
                <argument name="websiteCode" value="{{customWebsite.code}}"/>
            </actionGroup>
            <!-- Create first store -->
            <comment userInput="Create first Store" stepKey="commentCreateFirstStore"/>
            <actionGroup ref="AdminCreateNewStoreGroupActionGroup" stepKey="createFirstStore">
                <argument name="website" value="{{customWebsite.name}}"/>
                <argument name="storeGroupName" value="{{customStoreGroup.name}}"/>
                <argument name="storeGroupCode" value="{{customStoreGroup.code}}"/>
            </actionGroup>
            <!-- Create first store view -->
            <comment userInput="Create first Store view" stepKey="commentCreateFirstStoreView"/>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createFirstStoreView">
                <argument name="StoreGroup" value="customStoreGroup"/>
                <argument name="customStore" value="customStore"/>
            </actionGroup>
            <waitForPageLoad stepKey="waitForNextActionGroupPageLoad"/>

            <!--Create second Website -->
            <actionGroup ref="AdminCreateWebsiteActionGroup" stepKey="createSecondWebsite">
                <argument name="newWebsiteName" value="{{secondCustomWebsite.name}}"/>
                <argument name="websiteCode" value="{{secondCustomWebsite.code}}"/>
            </actionGroup>
            <!-- Create second store -->
            <comment userInput="Create second Store" stepKey="commentCreateSecondStore"/>
            <actionGroup ref="AdminCreateNewStoreGroupActionGroup" stepKey="createSecondStore">
                <argument name="website" value="{{secondCustomWebsite.name}}"/>
                <argument name="storeGroupName" value="{{SecondStoreGroupUnique.name}}"/>
                <argument name="storeGroupCode" value="{{SecondStoreGroupUnique.code}}"/>
            </actionGroup>
            <!-- Create second store view -->
            <comment userInput="Create second Store view" stepKey="commentCreateSecondStoreView"/>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createSecondStoreView">
                <argument name="StoreGroup" value="SecondStoreGroupUnique"/>
                <argument name="customStore" value="SecondStoreUnique"/>
            </actionGroup>
            <!-- Run cron, reindex and flash cache -->
            <comment userInput="Reindex and flash cache" stepKey="commentRunCommands"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexFirst">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCacheFirst">
                <argument name="tags" value=""/>
            </actionGroup>
        </before>

        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsRestrictedAdmin"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsDefaultAdmin"/>
            <!-- Delete created data -->
            <comment userInput="Delete created data" stepKey="commentDeleteData"/>
            <actionGroup ref="AdminDeleteWebsiteActionGroup" stepKey="deleteFirstWebsite">
                <argument name="websiteName" value="{{customWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteWebsiteActionGroup" stepKey="deleteSecondWebsite">
                <argument name="websiteName" value="{{secondCustomWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteCreatedUserActionGroup" stepKey="deleteUser">
                <argument name="user" value="newAdmin"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteUserRoleActionGroup" stepKey="adminDeleteRoleActionGroup">
                <argument name="roleName" value="{{RestrictedAdminRole.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminCatalogPriceRuleDeleteAllActionGroup" stepKey="deleteCatalogPriceRule"/>
            <actionGroup ref="AdminCartPriceRuleDeleteAllActionGroup" stepKey="deleteCartPriceRule"/>
            <!-- Log out -->
            <comment userInput="Log out" stepKey="commentLogOut"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>

            <!-- Reindex invalidated indices and flush cache -->
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCacheFirst">
                <argument name="tags" value=""/>
            </actionGroup>
        </after>

        <executeJS function="return '{{customWebsite.name}}'" stepKey="firstCustomWebsite"/>
        <executeJS function="return '{{secondCustomWebsite.name}}'" stepKey="secondCustomWebsite"/>
        <!-- Add admin custom Role -->
        <comment userInput="Add admin custom Role" stepKey="commentCreateAdminRole"/>
        <actionGroup ref="AdminCreateUserRoleWithMultipleWebsiteScopeActionGroup" stepKey="createAdminRole">
            <argument name="role" value="RestrictedAdminRole"/>
            <argument name="FirstWebsite" value="{{customWebsite.name}}"/>
            <argument name="SecondWebsite" value="{{secondCustomWebsite.name}}"/>
        </actionGroup>
        <!-- Add new user for admin Role -->
        <comment userInput="Add new user" stepKey="commentCreateNewUser"/>
        <actionGroup ref="AdminCreateUserActionGroup" stepKey="createAdminUser">
            <argument name="role" value="RestrictedAdminRole"/>
        </actionGroup>

        <!-- Create a cart price rule -->
        <actionGroup ref="AdminOpenNewCartPriceRuleFormPageActionGroup" stepKey="createCartPriceRule"/>
        <actionGroup ref="AdminCartPriceRuleFillMainInfoActionGroup" stepKey="fillMainInfoForCartPriceRule">
            <argument name="websites" value="&quot;{$firstCustomWebsite}&quot;,&quot;{$secondCustomWebsite}&quot;"/>
        </actionGroup>
        <actionGroup ref="AdminCartPriceRuleFillActionsActionGroup" stepKey="fillActionsForCartPriceRule"/>
        <actionGroup ref="AdminCartPriceRuleSaveActionGroup" stepKey="saveCartPriceRule"/>
        <!-- Login as created new user -->
        <comment userInput="Login as created new user" stepKey="commentLoginAsUser"/>
        <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsAdmin1"/>
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdminUser">
            <argument name="username" value="{{newAdmin.username}}"/>
            <argument name="password" value="{{newAdmin.password}}"/>
        </actionGroup>
        <!-- Check created cart price rules existing -->
        <comment userInput="Check created cart price rules existing" stepKey="commentCheckPriceRule"/>
        <amOnPage url="{{AdminCartPriceRulesPage.url}}" stepKey="amOnCartPriceList"/>
        <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="resetCartPriceRuleGridFilter"/>
        <see userInput="{{ApiSalesRule.name}}" stepKey="verifyText"/>
        <!-- Create a catalog price rule from admin page -->
        <comment userInput="Create a catalog price rule" stepKey="commentCreateCatalogPriceRule"/>
        <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsDefaultAdmin"/>
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsDefaultAdmin"/>
        <actionGroup ref="AdminOpenNewCatalogPriceRuleFormPageActionGroup" stepKey="createCatalogPriceRule"/>
        <actionGroup ref="AdminCatalogPriceRuleFillMainInfoActionGroup" stepKey="fillMainInfoForCatalogPriceRule">
            <argument name="groups" value="'NOT LOGGED IN'"/>
            <argument name="websites" value="&quot;{$firstCustomWebsite}&quot;,&quot;{$secondCustomWebsite}&quot;"/>
        </actionGroup>
        <actionGroup ref="AdminCatalogPriceRuleFillActionsActionGroup" stepKey="fillActionsForCatalogPriceRule"/>
        <actionGroup ref="AdminCatalogPriceRuleSaveAndApplyActionGroup" stepKey="saveAndApplyCatalogPriceRule"/>

        <!-- Login as created new user -->
        <comment userInput="Login as created new user" stepKey="commentLoginAsUserAgain"/>
        <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsCreatedNewAdmin"/>
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin3">
            <argument name="username" value="{{newAdmin.username}}"/>
            <argument name="password" value="{{newAdmin.password}}"/>
        </actionGroup>
        <!-- Check created catalog price rules existing -->
        <comment userInput="Check created catalog price rules existing" stepKey="commentCheckCatalogRule"/>
        <amOnPage url="{{CatalogRulePage.url}}" stepKey="goToCatalogRulePage" />
        <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="resetCatalogPriceRuleGridFilter"/>
        <see userInput="{{_defaultCatalogRule.name}}" stepKey="verifyCatalogRuleText"/>
    </test>
</tests>
