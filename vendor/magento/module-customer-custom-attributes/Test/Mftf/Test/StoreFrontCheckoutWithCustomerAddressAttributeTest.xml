<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StoreFrontCheckoutWithCustomerAddressAttributeTest">
        <annotations>
            <features value="Customer Checkout With Custom Address Attributes"/>
            <stories value="Customer Address attribute code is displayed instead of attribute label during checkout"/>
            <title value="Verify Custom dropdown customer address attribute option id showing on checkout"/>
            <description value="Checking drop down values"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-19894"/>
            <group value="customer"/>
            <group value="checkout"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdminForCustomAddressAttribute"/>
            <!--Create product-->
            <createData stepKey="category" entity="SimpleSubCategory"/>
            <createData stepKey="product" entity="SimpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
        </before>
        <after>
            <!-- Logout customer -->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>

            <actionGroup ref="AdminDeleteCustomerAttribute" stepKey="adminDeleteFirstCustomerAttribute">
                <argument name="defaultLabel" value="{{AttributeDropdownData.label}}"/>
            </actionGroup>
            <deleteData stepKey="deleteCategory" createDataKey="category"/>
            <deleteData stepKey="deleteProduct" createDataKey="product"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logOut"/>
        </after>
        <!--Create new attribute-->
        <amOnPage url="{{CustomerAddressAttributesPage.url}}" stepKey="navigateToCustomerAddress"/>
        <waitForPageLoad time="30" stepKey="timeToLoadAttributes"/>
        <actionGroup ref="AdminAddOptionsCustomerAttribute" stepKey="adminCreateCustomerFirstAttribute">
            <argument name="defaultLabel" value="{{AttributeDropdownData.label}}"/>
            <argument name="attributeCode" value="{{AttributeDropdownData.code}}"/>
            <argument name="inputType" value="{{AttributeDropdownData.inputType}}"/>
            <argument name="sortOrder" value="{{AttributeDropdownData.sortOrder}}"/>
            <argument name="firstOption" value="{{AttributeDropdownData.firstOption}}"/>
            <argument name="secondOption" value="{{AttributeDropdownData.secondOption}}"/>
        </actionGroup>

        <!-- Open storefront and register customer -->
        <actionGroup ref="StorefrontFillRegistrationFormActionGroup" stepKey="fillRequiredFields"/>

        <!-- Save customer -->
        <actionGroup ref="SaveRegistrationFormActionGroup" stepKey="createAccount"/>

        <!--Go to Storefront. Add product to cart-->
        <amOnPage url="/$$product.name$$.html" stepKey="GoToProduct"/>
        <actionGroup ref="StorefrontAddToCartCustomOptionsProductPageActionGroup" stepKey="AddProductToCard">
            <argument name="productName" value="$$product.name$$"/>
        </actionGroup>

        <!--Proceed to checkout-->
        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickCart"/>
        <click selector="{{StorefrontMinicartSection.goToCheckout}}" stepKey="goToCheckout"/>
        <waitForPageLoad time="20" stepKey="waitForPageLoad"/>

        <!--Verify that created "Test Dropdown" and "Test Multiple select" options appears on the page, and checks the background image are correct-->
        <see userInput="{{AttributeDropdownData.label}}" stepKey="seeLabelCreatedDropDownMenu"/>
        <selectOption selector="{{StorefrontCustomerAddressAttributeSection.dropdownField(AttributeDropdownData.code)}}" userInput="{{AttributeDropdownData.firstOption}}" stepKey="selectFirstOptionFromDropDownMenu"/>
        <selectOption selector="{{StorefrontCustomerAddressAttributeSection.dropdownField(AttributeDropdownData.code)}}" userInput="{{AttributeDropdownData.secondOption}}" stepKey="selectSecondOptionFromDropDownMenu"/>
        <executeJS function="return window.getComputedStyle({{StorefrontCustomerAddressAttributeSection.customAttributeJS(AttributeDropdownData.code, '0')}}).getPropertyValue('background-image')" stepKey="getDropdownBackgroundImage"/>
        <seeNumberOfElements selector="{{CheckoutShippingSection.regionOptions}}" stepKey="regionCount" userInput="{{CustomerAddressSimple.region_qty}}"/>
        <assertStringContainsString stepKey="assertDropdownBackgroundImage">
            <expectedResult type="string">images/select-bg.svg</expectedResult>
            <actualResult type="string">{$getDropdownBackgroundImage}</actualResult>
        </assertStringContainsString>
    </test>
</tests>
