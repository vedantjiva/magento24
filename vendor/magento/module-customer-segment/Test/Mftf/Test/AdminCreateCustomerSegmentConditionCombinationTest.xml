<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateCustomerSegmentConditionCombinationTest">
        <annotations>
            <stories value="Create Customer Segment Entity With Customer Conditions"/>
            <title value="Verify customer segment with several conditions combination"/>
            <description value="Admin should be able to create customer segment with several conditions combination"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14504"/>
            <group value="CustomerSegment"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>
            <!--Test customer is created-->
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <!--Test simple product is created-->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <field key="price">10</field>
                <field key="quantity">1000</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!--Add Simple product to Cart -->
            <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAgainAsCustomer">
                <argument name="Customer" value="$createCustomer$"/>
            </actionGroup>
            <amOnPage url="{{StorefrontCategoryPage.url($createCategory.name$)}}" stepKey="onCategoryPage"/>
            <waitForPageLoad stepKey="waitForCategoryPageLoad"/>
            <actionGroup ref="StorefrontAddSimpleProductToCartActionGroup" stepKey="addProductToCart">
                <argument name="product" value="$createProduct$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <actionGroup ref="AdminDeleteCartPriceRuleActionGroup" stepKey="deleteCartPriceRule">
                <argument name="ruleName" value="SegmentCartPriceRule" />
            </actionGroup>
            <actionGroup ref="FindAndDeleteCustomerSegmentActionGroup" stepKey="deleteSegment">
                <argument name="segmentName" value="{{CustomerSegmentDefault.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!--Navigate to CUSTOMERS->Segment > Click 'Add Segment' button -->
        <actionGroup ref="CreateCustomerSegmentWithContinueEditActionGroup" stepKey="createCustomerSegment">
            <argument name="customerSegment" value="CustomerSegmentDefault"/>
        </actionGroup>

        <!-- Add first conditions combination -->
        <click selector="{{AdminCustomerSegmentEditSection.conditionsTab}}" stepKey="proceedToConditionsTab"/>
        <click selector="{{AdminCustomerSegmentConditionsEditSection.addCondition}}" stepKey="clickToAddCondition" />
        <selectOption userInput="Conditions Combination*" selector="{{AdminCustomerSegmentConditionsEditSection.conditions}}" stepKey="selectCondition"/>
        <waitForPageLoad stepKey="waitForConditionsToAppear"/>

        <!-- Add second conditions combination -->
        <click selector="{{AdminCustomerSegmentConditionsEditSection.addNextConditionParam('1','2')}}" stepKey="clickToAddSecondCondition" />
        <selectOption userInput="Conditions Combination*" selector="{{AdminCustomerSegmentConditionsEditSection.conditions}}" stepKey="selectSecondCondition"/>
        <waitForPageLoad stepKey="waitForSecondConditionsToAppear"/>

        <!-- Add third conditions combination -->
        <click selector="{{AdminCustomerSegmentConditionsEditSection.addNextConditionParam('1','3')}}" stepKey="clickToThirdAddCondition" />
        <selectOption userInput="Conditions Combination*" selector="{{AdminCustomerSegmentConditionsEditSection.conditions}}" stepKey="selectThirdCondition"/>
        <waitForPageLoad stepKey="waitForThirdConditionsToAppear"/>

        <!-- Save conditions -->
        <click selector="{{AdminMainActionsSection.saveAndContinue}}" stepKey="saveSegment"/>
        <see userInput="You saved the segment." selector="{{AdminMessagesSection.success}}" stepKey="checkSuccessMessage"/>
        <actionGroup ref="CliConsumerStartActionGroup" stepKey="startMessageQueue">
            <argument name="consumerName" value="{{AdminCustomerSegmentConsumerData.consumerName}}"/>
            <argument name="maxMessages" value="{{AdminCustomerSegmentConsumerData.messageLimit}}"/>
        </actionGroup>
        <reloadPage stepKey="refreshPage"/>
        <waitForPageLoad stepKey="waitForPageLoaded"/>

        <!--  Add condition [Default Shipping Address|exists] -->
        <click selector="{{AdminCustomerSegmentEditSection.conditionsTab}}" stepKey="proceedToConditionsTab2"/>
        <click selector="{{AdminCustomerSegmentConditionsEditSection.addNextConditionParam('1--1','1')}}" stepKey="clickToAddAdressCondition" />
        <selectOption userInput="Default Shipping Address" selector="{{AdminCustomerSegmentConditionsEditSection.conditionsParam('1--1')}}" stepKey="selectAddressCondition"/>
        <waitForPageLoad stepKey="waitForAddressConditionsToAppear"/>
        <doubleClick selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueChooserParam('1--1','...')}}" stepKey="showSelector"/>
        <selectOption userInput="exist" selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueParam('1--1--1')}}" stepKey="selectExistOption"/>
        <see userInput="Customer Default Shipping Address  exists" stepKey="seeFirstChildCondition"/>

        <!--  Add condition [Number of Cart Line Items*|is|1] -->
        <click selector="{{AdminCustomerSegmentConditionsEditSection.addNextConditionParam('1--2','1')}}" stepKey="clickToAddCartCondition" />
        <selectOption userInput="Number of Cart Line Items*" selector="{{AdminCustomerSegmentConditionsEditSection.conditionsParam('1--2')}}" stepKey="selectCartCondition"/>
        <waitForPageLoad stepKey="waitForCartConditionsToAppear"/>
        <click selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueChooserParam('1--2','...')}}" stepKey="showNumberOfCartLineField"/>

        <click selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueParam('1--2--1')}}" stepKey="activateNumberOfCartLineField"/>
        <fillField userInput="1" selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueParam('1--2--1')}}" stepKey="fillNumberField"/>
        <click selector="{{AdminCustomerSegmentConditionsEditSection.addNextConditionParam('1--3','1')}}" stepKey="clickToSecondChildAddCondition" />
        <see userInput="Number of Shopping Cart Line Items is  1 " stepKey="seeNumberOfCartLineCondition"/>

        <!--  Add condition [Products Quantity*|is|2] -->
        <selectOption userInput="Products Quantity*" selector="{{AdminCustomerSegmentConditionsEditSection.conditionsParam('1--3')}}" stepKey="selectProductQtyCondition"/>
        <waitForPageLoad stepKey="waitForQtyConditionsToAppear"/>
        <click selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueChooserParam('1--3','...')}}" stepKey="showQtyField"/>

        <click selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueParam('1--3--1')}}" stepKey="activateQtyField"/>
        <fillField userInput="2" selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueParam('1--3--1')}}" stepKey="fillQtyField"/>
        <click selector="{{AdminCustomerSegmentConditionsEditSection.conditionValueParam('1--3--1')}}" stepKey="setQtyCondition"/>

        <!-- Save conditions -->
        <click selector="{{AdminMainActionsSection.saveAndContinue}}" stepKey="saveSecondTimeSegment"/>
        <click selector="{{AdminCustomerSegmentEditSection.conditionsTab}}" stepKey="proceedToConditionsTab3"/>
        <see userInput="Shopping Cart Products Qty is  2 " stepKey="seeQtyCondition"/>
        <see userInput="You saved the segment." selector="{{AdminMessagesSection.success}}" stepKey="checkSegmentSuccessMessage"/>
        <actionGroup ref="CliConsumerStartActionGroup" stepKey="startMessageQueue2">
            <argument name="consumerName" value="{{AdminCustomerSegmentConsumerData.consumerName}}"/>
            <argument name="maxMessages" value="{{AdminCustomerSegmentConsumerData.messageLimit}}"/>
        </actionGroup>
        <reloadPage stepKey="refreshPage2"/>
        <waitForPageLoad stepKey="waitForPageLoaded2"/>

       <!--go to frontend(as logged in) john doe and update qty=2 for shopping cart-->
        <amOnPage url="{{CheckoutCartPage.url}}" stepKey="amOnPageShoppingCart"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad1"/>
        <fillField selector="{{CheckoutCartProductSection.ProductQuantityByName($createProduct.name$)}}"  userInput="2" stepKey="changeCartQty"/>
        <click selector="{{CheckoutCartProductSection.updateShoppingCartButton}}" stepKey="openShoppingCart"/>
        <waitForPageLoad stepKey="waitForCheckoutPageLoad2"/>

       <actionGroup ref="FindAndOpenCustomerSegmentActionGroup" stepKey="openSegment">
           <argument name="segmentName" value="{{CustomerSegmentDefault.name}}"/>
       </actionGroup>

        <actionGroup ref="AdminCheckCustomerInSegmentActionGroup" stepKey="checkCustomerInNewSegment">
            <argument name="customer" value="Simple_US_Customer"/>
        </actionGroup>

        <!--Navigate to MARKETING->Cart Price Rule and click "+", then fill all required data according to dataset and save rule-->
        <actionGroup ref="AdminCreateCartPriceRuleAndStayOnEditActionGroup" stepKey="createCartPriceRule">
            <argument name="ruleName" value="SegmentCartPriceRule"/>
        </actionGroup>

        <actionGroup ref="SetCartAttributeConditionWithSegmentForCartPriceRuleActionGroup" stepKey="setSegment">
            <argument name="attributeName" value="Customer Segment"/>
            <argument name="value" value="CustomerSegmentDefault"/>
        </actionGroup>

        <!--Perform assertions-->
        <amOnPage url="{{CheckoutCartPage.url}}" stepKey="amOnShoppingCartPage"/>
        <actionGroup ref="StorefrontCheckCartDiscountAndSummaryActionGroup" stepKey="checkTotalPrice">
            <argument name="product" value="$createProduct$"/>
            <argument name="total" value="20.00"/>
            <argument name="discount" value="10.00"/>
        </actionGroup>
    </test>
</tests>
